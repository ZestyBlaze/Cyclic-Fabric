plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://maven.parchmentmc.org" } // Parchment
	maven { url "https://maven.ladysnake.org/releases" } // Cardinal Components
	maven { url "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.20.1:2023.09.03@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modApi "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:8.0.0"

	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.2.2"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.2.2"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.2.2"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.2.2"

	include modApi('teamreborn:energy:3.0.0') {
		transitive = false
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

loom {
	accessWidenerPath = file("src/main/resources/cyclic.accessWidener")
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}